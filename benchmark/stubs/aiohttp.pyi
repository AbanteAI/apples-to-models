from typing import Any, AsyncContextManager, Dict, Optional, TypeVar

T = TypeVar("T", bound="ClientResponse")

class ClientSession:
    def __init__(self) -> None: ...
    async def __aenter__(self) -> "ClientSession": ...
    async def __aexit__(self, exc_type: Any, exc_val: Any, exc_tb: Any) -> None: ...
    async def get(
        self,
        url: str,
        *,
        headers: Optional[Dict[str, str]] = None,
    ) -> "ClientResponse": ...
    def close(self) -> None: ...

class ClientResponse(AsyncContextManager[T]):
    def __init__(self) -> None: ...
    async def __aenter__(self) -> "ClientResponse": ...
    async def __aexit__(self, exc_type: Any, exc_val: Any, exc_tb: Any) -> None: ...
    async def json(self) -> Dict[str, Any]: ...
    async def text(self) -> str: ...
    def close(self) -> None: ...
